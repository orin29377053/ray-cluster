apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: my-raycluster   
  namespace: default   
  labels:
    helm.sh/chart: ray-cluster-1.2.2
    app.kubernetes.io/instance: raycluster
spec:
  rayVersion: "2.9.0"  
  headGroupSpec:
    serviceType: ClusterIP  
    rayStartParams:
      dashboard-host: "0.0.0.0"   
    template:
      metadata:
        labels:
          helm.sh/chart: ray-cluster-1.2.2
          app.kubernetes.io/instance: raycluster
      spec:
        containers:
          - name: ray-head
            image: orin29377053/ray-cluster:latest
            env:
              - name: ROLE
                value: "head" 
            imagePullPolicy: Always 
            resources:
              requests:
                cpu: "1"
                memory: "2G"
              limits:
                cpu: "1"
                memory: "2G"
            volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume 
        volumes:
          - name: log-volume
            emptyDir: {}  
        affinity: {} 
        tolerations: [] 
        nodeSelector: {}  

  workerGroupSpecs:  
    - groupName: workergroup 
      replicas: 2  
      minReplicas: 2 
      maxReplicas: 3  
      numOfHosts: 1
      rayStartParams: {}
      template:
        metadata:
          labels:
            helm.sh/chart: ray-cluster-1.2.2
            app.kubernetes.io/instance: raycluster
        spec:
          containers:
            - name: ray-worker
              image: orin29377053/ray-cluster:latest  
              env:
                - name: ROLE
                  value: "worker"
              imagePullPolicy: Always
              resources:
                limits:
                  cpu: "1"
                  memory: 1G
                requests:
                  cpu: "1"
                  memory: 1G
              volumeMounts:
                - mountPath: /tmp/ray
                  name: log-volume
          volumes:
            - name: log-volume
              emptyDir: {}
          affinity: {}  
          tolerations: []  
          nodeSelector: {}  
